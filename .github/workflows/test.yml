name: PR Testing Pipeline

on:
  pull_request:
    branches:
      - "*"  # Déclenche sur toutes les branches PR
  push:
    branches:
      - 'refs/pull/*/merge'  # Déclenche lors des commits sur la PR

jobs:
  test:
    name: Install and Test Application
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set Up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'  # Tu peux ajuster la version de Node.js ici selon tes besoins

      - name: Install Dependencies
        run: npm install

      - name: Lint Code
        run: npm run lint

      - name: Build Application
        run: npm run build

      - name: Run Application Tests
        run: npm test  # Assumes you have a test script defined in package.json

      # Optionnel : Exécuter l'application en mode développement pour des tests manuels
      - name: Start Application in Dev Mode
        run: npm run dev &
      
      # Optionnel : Utiliser ngrok pour tester l'application manuellement
      - name: Download ngrok
        if: github.actor != 'renovate[bot]'
        run: |
          curl -s https://ngrok-agent.s3.amazonaws.com/ngrok.asc | tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null \
          && echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | tee /etc/apt/sources.list.d/ngrok.list \
          && apt update && apt install ngrok

      - name: Expose Local Server via ngrok
        if: github.actor != 'renovate[bot]'
        run: |
          ngrok http 3000 > /dev/null &
          sleep 5
          curl -s localhost:4040/api/tunnels | jq -r '.tunnels[0].public_url'

      - name: Output Test URL
        if: github.actor != 'renovate[bot]'
        run: |
          URL=$(curl -s localhost:4040/api/tunnels | jq -r '.tunnels[0].public_url')
          echo "Test URL: $URL"
