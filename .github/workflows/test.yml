name: PR Production Testing

on:
  pull_request:
    branches:
      - "*"

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install Dependencies
        run: npm ci

      - name: Build Application
        run: npm run build  # Génère les fichiers de production

      - name: Install serve for Production
        run: npm install -g serve  # Serveur léger pour servir les fichiers de production

      - name: Start Production Server
        run: |
          serve -s dist -l 3000 &  # Dossier `dist` (ou équivalent) généré par `npm run build`
          sleep 5

      - name: Install ngrok
        if: github.actor != 'renovate[bot]'
        run: |
          curl -s https://ngrok-agent.s3.amazonaws.com/ngrok.asc | tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null \
          && echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | tee /etc/apt/sources.list.d/ngrok.list \
          && apt update && apt install ngrok

      - name: Expose Production Server via ngrok
        if: github.actor != 'renovate[bot]'
        run: |
          ngrok http 3000 > /dev/null &
          sleep 5
          echo "TEST_URL=$(curl -s localhost:4040/api/tunnels | jq -r '.tunnels[0].public_url')" >> $GITHUB_ENV

      - name: Post Test URL to PR
        if: github.actor != 'renovate[bot]'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const url = process.env.TEST_URL;
            const prNumber = context.payload.pull_request.number;
            const message = `Tests passed! You can view the production test URL here: ${url}`;
            await github.issues.createComment({
              ...context.repo,
              issue_number: prNumber,
              body: message,
            });

      - name: Stop ngrok
        run: |
          pkill ngrok
